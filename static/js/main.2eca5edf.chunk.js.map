{"version":3,"sources":["components/Weather.js","components/BarGraph.js","factory.svg","App.js","reportWebVitals.js","index.js"],"names":["Weather","className","this","props","city","country","icon","temp","description","humidity","pressure","wind","React","Component","BarGraph","data","labels","datasets","label","options","maintainAspectRatio","apiKey","App","getIcon","icons","id","setState","thunderstorm","drizzle","rain","snow","atmosphere","clear","clouds","getLocalWeather","navigator","geolocation","getCurrentPosition","postion","latitude","coords","longitude","loadWeather","err","display","alert","getAqi","fetch","state","then","resp","json","aqi","list","main","des","aqiDes","Carbonmonoxide","components","co","Nitrogenmonoxide","no","Nitrogendioxide","no2","Ozone","o3","cod","name","sys","Math","floor","weather","speed","Icon","values","hourly","map","t","dt","times","i","Date","hours","getHours","minutes","getMinutes","push","temps","onSearchClick","search","coord","lon","lat","onSearchChange","e","target","value","undefined","style","textAlign","disp","Form","paddingTop","Row","Col","xs","Control","placeholder","onChange","onKeyPress","key","preventDefault","Button","type","variant","onClick","Container","Image","src","Img","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2eca5edf.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Weather.css\"\n\n\nclass Weather extends React.Component {\n\n    render() {\n\n        return (\n            <div className='weather' >\n                <h1>{this.props.city},{this.props.country}</h1><br /><br />\n                <i className={`wi ${this.props.icon} display-1`}></i><br /> <br />\n                <h3>{this.props.temp}&deg;C</h3>\n                <h3>{this.props.description}</h3>\n                <div>\n                    <div>Humidity: {this.props.humidity} % &nbsp;&nbsp; Pressure: {this.props.pressure} hPa</div>\n                    <div>Wind: {this.props.wind} meter/sec</div>\n                </div>\n            </div >\n        );\n\n    }\n\n}\n\nexport default Weather;\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nclass BarGraph extends React.Component {\n\n    render() {\n\n        const data = {\n            labels: this.props.labels,\n            datasets: [{\n                label: 'Temperature in Â°c',\n                data: this.props.data\n            }]\n        }\n\n        return (\n            <div >\n                <Bar\n                    data={data}\n\n                    options={{ maintainAspectRatio: true }}\n                />\n            </div >\n        );\n\n    }\n\n}\n\nexport default BarGraph;\n","export default __webpack_public_path__ + \"static/media/factory.0bdb8ba0.svg\";","import React, { Component } from 'react';\nimport Weather from \"./components/Weather\"\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nimport { Form, Col, Button, Row, Container, Image } from 'react-bootstrap';\nimport BarGraph from './components/BarGraph'\nimport Img from \"./factory.svg\"\n\nconst apiKey = '8d44c5609ed1f902741d31e3b65a3959';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      search: \"\",\n      icon: undefined,\n      temp: undefined,\n      description: \"\",\n      display: <h3 style={{ textAlign: 'center' }}>Loading...</h3>,\n      latitude: undefined,\n      longitude: undefined,\n      pressure: undefined,\n      humidity: undefined,\n      wind: undefined,\n      labels: undefined,\n      data: undefined,\n      aqi: undefined,\n      aqiDes: undefined,\n      Carbonmonoxide: undefined,\n      Nitrogenmonoxide: undefined,\n      Nitrogendioxide: undefined,\n      Ozone: undefined\n    };\n\n\n\n    this.Icon = {\n      drizzle: \"wi-sleet\",\n      rain: \"wi-storm-showers\",\n      thunderstorm: \"wi-thunderstorm\",\n      snow: \"wi-snow\",\n      atmosphere: \"wi-fog\",\n      clouds: \"wi-day-fog\",\n      clear: \"wi-day-sunny\",\n    }\n\n\n  }\n\n  getIcon = (icons, id) => {\n\n    if (id >= 200 && id < 232) {\n      this.setState({ icon: icons.thunderstorm });\n    } else if (id >= 300 && id <= 321) {\n      this.setState({ icon: icons.drizzle });\n    } else if (id >= 500 && id <= 521) {\n      this.setState({ icon: icons.rain });\n    } else if (id >= 600 && id <= 622) {\n      this.setState({ icon: icons.snow });\n    } else if (id >= 701 && id <= 781) {\n      this.setState({ icon: icons.atmosphere });\n    } else if (id === 800) {\n      this.setState({ icon: icons.clear });\n    } else if (id >= 801 && id <= 804) {\n      this.setState({ icon: icons.clouds });\n    }\n  }\n\n  getLocalWeather = () => {\n    navigator.geolocation.getCurrentPosition((postion) => {\n      this.setState({ latitude: postion.coords.latitude, longitude: postion.coords.longitude })\n      this.loadWeather()\n\n    }, (err) => {\n      this.setState({ display: \"\" })\n      alert(\"Enable your browser location to check weather at your location\")\n    })\n  }\n\n  getAqi = () => {\n    fetch(`https://api.openweathermap.org/data/2.5/air_pollution?lat=${this.state.latitude}&lon=${this.state.longitude}&appid=${apiKey}`)\n      .then(resp => resp.json())\n      .then(data => {\n        let aqi = data.list[0].main.aqi;\n        let des = \"\"\n        if (aqi === 1) {\n          des = \"Good\"\n        } else if (aqi === 2) {\n          des = \"Fair\"\n        } else if (aqi === 3) {\n          des = \"Moderate\"\n        } else if (aqi === 4) {\n          des = \"Poor\"\n        } else if (aqi === 5) {\n          des = \"Very Poor\"\n        }\n        this.setState({\n          aqi: aqi,\n          aqiDes: des, Carbonmonoxide: data.list[0].components.co,\n          Nitrogenmonoxide: data.list[0].components.no, Nitrogendioxide: data.list[0].components.no2, Ozone: data.list[0].components.o3\n        })\n      })\n  }\n\n  componentDidMount() {\n    this.getLocalWeather()\n  }\n\n  loadWeather = () => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&appid=${apiKey}`)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.cod === 200) {\n          this.setState({\n            city: data.name,\n            country: data.sys.country,\n            temp: Math.floor(data.main.temp - 273.15),\n            description: data.weather[0].description,\n            pressure: data.main.pressure,\n            humidity: data.main.humidity,\n            wind: data.wind.speed\n          })\n          this.getIcon(this.Icon, data.weather[0].id);\n        }\n      })\n\n    fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.latitude}&lon=${this.state.longitude}&appid=${apiKey}`)\n      .then(resp => resp.json())\n      .then(data => {\n        let values = data.hourly.map(t => t.dt)\n        let times = []\n        for (let i = 1; i < 25; i++) {\n          let t = new Date(values[i] * 1000)\n          var hours = t.getHours();\n          var minutes = t.getMinutes();\n          times.push(`${hours}:${minutes}`)\n        }\n        this.setState({ labels: times })\n\n\n        let temps = data.hourly.map(t => t.temp)\n        let temp = []\n        for (let i = 1; i < 25; i++) {\n          let t = Math.floor(temps[i] - 273.15)\n          temp.push(t)\n        }\n\n        this.setState({ data: temp })\n\n      })\n\n    this.getAqi()\n  }\n\n  onSearchClick = () => {\n    if (this.state.search) {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.search}&appid=${apiKey}`)\n        .then(resp => resp.json())\n        .then(data => {\n          if (data.cod === '404') {\n            alert(\"City not found\")\n          }\n          if (data.cod === 200) {\n            this.setState({\n              city: data.name,\n              country: data.sys.country,\n              temp: Math.floor(data.main.temp - 273.15),\n              description: data.weather[0].description,\n              pressure: data.main.pressure,\n              humidity: data.main.humidity,\n              wind: data.wind.speed,\n              longitude: data.coord.lon,\n              latitude: data.coord.lat\n            }, () => {\n              fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.latitude}&lon=${this.state.longitude}&appid=${apiKey}`)\n                .then(resp => resp.json())\n                .then(data => {\n                  let values = data.hourly.map(t => t.dt)\n                  let times = []\n                  for (let i = 1; i < 25; i++) {\n                    let t = new Date(values[i] * 1000)\n                    var hours = t.getHours();\n                    var minutes = t.getMinutes();\n                    times.push(`${hours}:${minutes}`)\n                  }\n                  this.setState({ labels: times })\n\n\n                  let temps = data.hourly.map(t => t.temp)\n                  let temp = []\n                  for (let i = 1; i < 25; i++) {\n                    let t = Math.floor(temps[i] - 273.15)\n                    temp.push(t)\n                  }\n\n                  this.setState({ data: temp }, this.getAqi)\n\n\n                })\n            })\n            this.getIcon(this.Icon, data.weather[0].id);\n          }\n        })\n    }\n\n  }\n\n  onSearchChange = (e) => {\n    this.setState({ search: e.target.value })\n  }\n\n\n  render() {\n\n    let disp = this.state.display\n\n    if (this.state.city !== undefined) {\n      disp = <Weather city={this.state.city} temp={this.state.temp} country={this.state.country}\n        icon={this.state.icon} description={this.state.description}\n        humidity={this.state.humidity} pressure={this.state.pressure} wind={this.state.wind} />\n    }\n\n    return (\n      <div>\n        <Form className=\"form\" style={{ paddingTop: 5 }}>\n          <Form.Row className=\"align-items-center\">\n            <Col xs=\"auto\">\n              <Form.Control\n                className=\"mb-2\"\n                id=\"inlineFormInput\"\n                placeholder=\"City\"\n                onChange={this.onSearchChange}\n                onKeyPress={e => { if (e.key === \"Enter\") e.preventDefault(); }}\n              />\n            </Col>\n            <Col xs=\"auto\">\n              <Button type=\"button\" className=\"mb-2\" variant=\"info\" onClick={this.onSearchClick}>\n                Search\n              </Button>\n              &nbsp;&nbsp;\n              <Button type=\"button\" className=\"mb-2\" variant=\"info\" onClick={this.getLocalWeather}>\n                Show local weather\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n        <br />\n        <Container>\n          <Row>\n            <Col>{disp}</Col>\n            <Col>\n              <h4>Hourly temperature forecast for next 24 hours</h4>\n              <BarGraph data={this.state.data} labels={this.state.labels} />\n            </Col>\n          </Row>\n          {this.state.aqi ? (\n            <Row>\n              <Col style={{ textAlign: 'center' }}>\n                <Image src={Img} style={{ height: \"8em\" }} />\n                <div>Air quality index: {this.state.aqi} ( {this.state.aqiDes} ) &nbsp;&nbsp; Carbon monoxide: {this.state.Carbonmonoxide} Î¼g/m3</div>\n                <div>Nitrogen monoxide: {this.state.Nitrogenmonoxide} Î¼g/m3 &nbsp;&nbsp; Nitrogen dioxide: {this.state.Nitrogendioxide} Î¼g/m3</div>\n                <div>Ozone: {this.state.Ozone} Î¼g/m3</div>\n              </Col>\n            </Row>\n          ) : (\n              <div></div>\n            )}\n        </Container>\n\n      </div >\n    );\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}